version: '3.7'

services:

  analysis:
    image: localhost/sonarscanner-cli
    build:
      context: ..
      dockerfile: analysis/Dockerfile
    working_dir: /frag
    entrypoint: /frag/analysis/entrypoint.sh
    depends_on:
      - sonarqube
    networks:
      - sonar
    volumes:
      - ..:/frag

  sonarqube:
    image: sonarqube:8.9.10-community
    depends_on:
      - init
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    ports:
      - '9000:9000'
    networks:
      - sonar
    ulimits:
      nproc: 131072
      nofile:
        soft: 8192
        hard: 131072
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs

  db:
    image: postgres:12
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    networks:
     - sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

  init:
    image: bash
    privileged: true
    user: root
    volumes:
      - ./init.sh:/mnt/init.sh
    command: ["sh", "-e", "/mnt/init.sh"]

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:

networks:
  sonar:

