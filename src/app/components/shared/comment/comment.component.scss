@use "sass:math";
@import "src/layout/laout-util";

@mixin card-box-shadow($color: transparent, $x: -8px) {
  box-shadow: 0 2px 1px -1px rgba(0, 0, 0, 0.2),
  0px 1px 1px 0px rgba(0, 0, 0, 0.14),
  0px 1px 3px 0px rgba(0, 0, 0, 0.12),
  $x 0px 0px 0px $color;
}

#comment-card {
  background-color: var(--surface);
  padding: 1.5% 1.5% 3% 3%;
  transition: background-color 0.5s linear,
  box-shadow 0.15s ease-in-out;
  touch-action: auto !important;
  margin: 16px 0 16px var(--marginLeft);
}

.color-tooltip {
  content: '';
  top: 0;
  width: 8px;
  height: 100%;
  position: absolute;
  left: -8px;
}

mat-card-content > :first-child {
  margin-top: 20px;
}

.delete-own-comment {
  color: var(--on-surface) !important;
}

.voting-icon {
  width: 36px;
  height: 36px;
  font-size: 36px;
  color: var(--on-surface)
}

.upVoted {
  color: var(--green);
}

.downVoted {
  color: var(--red);
}

.not-marked {
  color: dimgray;
}

.answered-icon {
  color: var(--primary);
}

.correct-icon {
  color: var(--green);
}

.favorite-icon {
  color: var(--yellow);
}

.bookmark-icon {
  color: var(--purple);
}

.wrong-icon {
  color: var(--red);
}

.beamer-icon {
  color: var(--on-surface);
  transform: scale(1.8) !important;
  padding-left: 10px;
}

.score {
  min-width: 40px;
  text-align: center;
  margin-top: 3px;
  color: var(--primary);
  font-size: 24px;

  @media (max-width: 330px) {
    margin-left: -20px !important;
  }
}

.scoreCreator {
  color: var(--primary);
  margin-right: 10px;
  font-size: 24px;

  @media (max-width: 330px) {
    margin-left: -20px !important;
  }
}

.body {
  min-width: 200px;
  min-height: 100px;
  text-align: start;
  font-size: 16px;
  overflow: auto;
  color: var(--on-surface);
  white-space: pre-line;
  hyphens: auto;
  overflow-wrap: break-word !important;
  z-index: 100;
}

.click {
  cursor: pointer;
}

.user-icon,
.mat-icon {
  transform: scale(1.0);
}

.date-container {
  font-size: 12px;
  color: dimgray;
  padding-top: .3rem;
}

.comment-actions {
  align-items: center;
  height: 3.5rem;
}

.action-menu-content {
  background: var(--dialog);
}

/*
.highlighted {
  background-color: var(--secondary) !important;
  transition: background-color 1s linear;
}

.highlighted * {
  color: var(--on-secondary) !important;
}
*/

.gavel {
  color: var(--primary) !important;
  margin: 0 10px 0 10px;
}

.moderator {
  background-color: var(--moderator) !important;
}

.border {
  @include card-box-shadow(transparent, 0);

  &-correct {
    @include card-box-shadow(var(--green));
  }

  &-wrong {
    @include card-box-shadow(var(--red));
  }

  &-bookmark {
    @include card-box-shadow(var(--purple));
  }

  &-favorite {
    @include card-box-shadow(var(--yellow));
  }

  &-notMarked {
    @include card-box-shadow(var(--grey));
  }

  &-answer {
    @include card-box-shadow(var(--primary));
  }

  &-ownQuestion {
    @include card-box-shadow(mediumslateblue);
  }

  &-bonus {
    @include card-box-shadow(var(--yellow));
  }

  &-merged {
    @include card-box-shadow(var(--magenta));
  }

  &-discussed {
    @include card-box-shadow(var(--gray));
  }

  &-mergeSelect {
    @include card-box-shadow(var(--cyan));
  }

  &-fromModerator {
    @include card-box-shadow(orange);
  }

  &-fromOwner {
    @include card-box-shadow(var(--red));
  }

  &-moderated {
    @include card-box-shadow(var(--red));
  }
}

.comment-tags {
  cursor: pointer;
  color: var(--primary);
  margin-right: 10px;
}

.comment-keywords {
  cursor: pointer;
  color: var(--on-surface);
  margin-right: 25px;
}

.questioner-name {
  color: var(--secondary);
  margin-right: 6px;
  margin-left: 10px;
}

::ng-deep .mat-menu-panel {
  min-height: 56px !important;
}

.keywords-list {
  flex-grow: 1;
  flex-shrink: 1;
  overflow: auto;
  padding-top: 0 !important;
  background-color: var(--alt-dialog);
}

.keywords-even {
  background-color: var(--alt-surface);
}

.keyword-span {
  color: var(--on-surface) !important;
  opacity: 1 !important;
  cursor: pointer;
  width: 100%;
}

.keyword-answer-icon {
  margin-left: 10px;
  color: var(--primary) !important;

  + span {
    transform: scale(1.2);
  }
}

.keyword-icon {
  margin-right: 2px;
  margin-left: 10px;

  + span {
    transform: scale(1.2);
  }
}

::ng-deep .mat-badge-content {
  background: var(--secondary);
  color: var(--on-secondary);
}

.user-number {
  cursor: pointer;
  color: var(--on-surface);
  margin-right: 25px;

  > span {
    transform: scale(1.2);
  }
}

.user-number.joyrideActive {
  padding: 5px;
}

.commentExpanderButton {
  color: var(--on-surface);
}


.user-icon {
  margin-right: 2px;
  transform: scale(1.3);
}

.voteUp {
  animation: upVote 1s;
}

.voteDown {
  animation: downVote 1s;
}

.reset {
  animation: rubber 1s;
}

.edit-button .mat-icon {
  transform: scale(1.0);
  color: var(--on-surface);
}

.moderate-button .mat-icon {
  color: var(--on-surface);
}

.commentBody {
  transition: height ease-in-out 0.2s;
}

@keyframes upVote {
  0% {
    transform: scale3d(1, 1, 1);
  }
  30% {
    transform: scale3d(1.05, 0.75, 1) translateY(-6px)
  }
  40% {
    transform: scale3d(0.75, 1.05, 1) translateY(-12px)
  }
  50% {
    transform: scale3d(1.05, 0.95, 1) translateY(-10px)
  }
  65% {
    transform: scale3d(0.95, 1.05, 1) translateY(-7px)
  }
  80% {
    transform: scale3d(1.05, 0.95, 1) translateY(-5px)
  }
  100% {
    transform: scale3d(1, 1, 1) translateY(0)
  }
}

@keyframes downVote {
  0% {
    transform: scale3d(1, 1, 1);
  }
  30% {
    transform: scale3d(1.05, 0.75, 1) translateY(6px)
  }
  40% {
    transform: scale3d(0.75, 1.05, 1) translateY(12px)
  }
  50% {
    transform: scale3d(1.05, 0.95, 1) translateY(10px)
  }
  65% {
    transform: scale3d(0.95, 1.05, 1) translateY(7px)
  }
  80% {
    transform: scale3d(1.05, 0.95, 1) translateY(5px)
  }
  100% {
    transform: scale3d(1, 1, 1) translateY(0)
  }
}

@keyframes rubber {
  0% {
    transform: scale3d(1, 1, 1);
  }
  30% {
    transform: scale3d(1.05, 0.75, 1)
  }
  40% {
    transform: scale3d(0.75, 1.05, 1)
  }
  50% {
    transform: scale3d(1.05, 0.95, 1)
  }
  65% {
    transform: scale3d(0.95, 1.05, 1)
  }
  100% {
    transform: scale3d(1, 1, 1)
  }
}

// all in pixels
$max-width: 800;
$min-width: 375;
$max-font-size: 80;
$min-font-size: 40;
$margin-top: 70;

$font-range: $max-font-size - $min-font-size;
$width-range: $max-width - $min-width;

:host {
  .runningnum-outer {
    width: calc(100% - 72px);
    height: 0;
    position: absolute;
    right: 65px;
    top: 60px;
    font-size: calc(min(100vw, 800px) - var(--marginLeft));

    > p {
      font-family: 'Roboto', sans-serif;
      font-size: calc(#{$font-range}em / #{$width-range} - #{$max-font-size - math.div($max-width * $font-range, $width-range)}px);
      line-height: normal;
      padding: 0;
      font-weight: normal;
      font-style: normal;
      color: var(--on-surface);
      opacity: 0.2;
      float: right;
      position: relative;
      z-index: 0;
      display: flex;
      max-width: 100%;
      overflow: hidden;

      > mat-icon {
        line-height: 1em;
        font-size: 1em;
        width: 1em;
        height: 1em;
        margin-right: 10px;
        margin-top: 3px;
      }

      > span {
        margin-left: 10px;
      }
    }
  }
}

:host ::ng-deep {
  .images img {
    max-width: 100% !important;
  }
}

.responses-watermark {
  margin-right: 50px;
  font-size: 12px;
}

.replyButton {
  color: var(--primary);
  background-color: transparent;

  &:hover {
    outline: var(--primary) solid;
  }
}

.divider {
  width: 5px;
  height: auto;
  display: inline-block;
}

#sort-button {
  color: var(--secondary);
}

.mat-card {
  border-radius: 40px !important;
}
