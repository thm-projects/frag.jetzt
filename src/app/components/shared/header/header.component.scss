.app-title {
  cursor: pointer;
  margin: 0 auto;
  color: var(--on-surface);
}

mat-toolbar {
  background-color: var(--surface);
  position: relative;
}

mat-toolbar-row {
  padding: 0 5px;
}

.header-icons {
  color: var(--on-surface);
}

::ng-deep .qrcode svg > path {
  fill: var(--on-surface);
  color: var(--on-surface);
}

.moderation-enabled {
  color: var(--on-surface);
  margin-left: 5px;
  font-size: medium;
  font-weight: bold;
}

.noOfQuestions {
  position: absolute !important;
  right: 130px !important;
  padding: 10px !important;
  margin: 0 !important;
}

.topic-cloud-btns {
  > ars-col button {
    margin-right: 0.75em;

    &:hover, &:focus {
      border: none;
    }
  }

  > * {
    overflow: hidden !important;
    color: var(--on-surface);
  }
}

.comment_tag-icon {
  height: 18px !important;
}

.sessions {
  color: var(--primary);
  transform: scale(1.5);
}

h2 {
  margin-right: 10px;
  font-size: medium !important;
}

.label-icon {
  display: flex;
  align-items: center;
}

.mat-button {
  padding: 0 0 0 10px;
}

button:focus {
  border: 1px solid var(--on-surface);
}

svg {
  -webkit-filter: invert(100%); /* safari 6.0 - 9.0 */
  filter: invert(100%);
}

.question-focus-btn {
  background-color: var(--surface);
  color: var(--primary);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;

  * {
    color: var(--primary);
  }
}

.question-focus-btn-txt {
  padding-left: 10px;
}

.color-warn {
  color: red !important;
}

.beamer-icon {
  transform: scale(1.4);
}

.mat-menu-inner-title {
  font-family: 'Roboto', sans-serif;
  font-size: 16px;
  width: 100%;
  box-sizing: border-box;
  padding-left: 15px;
  color: var(--on-background);
}

.mat-menu-inner-box {
  background-color: var(--primary-variant);
  border-radius: 5px;

  * {
    background-color: transparent !important;
  }
  *:hover {
    color: var(--dialog);
    background-color: var(--on-dialog) !important;

    mat-icon{
      color: var(--dialog);
      background-color: var(--on-dialog) !important;
    }
  }

}
h1 {
  color: red;
}
::ng-deep .mat-menu-item:hover .qrcode svg > path {
  fill: var(--dialog) !important;
  color: var(--dialog) !important;
  background-color: var(--on-dialog) !important;
}

::ng-deep #cdk-overlay-0 .mat-menu-content > button:hover mat-icon {
  color: var(--dialog) !important;
  background-color: var(--on-dialog) !important;
}
