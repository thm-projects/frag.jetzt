#editorRow {
  overflow-x: hidden !important;
}

#deeplFormality {
  display: inline;
}

.deepl-form-field {
  @media screen and (max-width: 500px) {
    width: 100px;
  }
  z-index: 10000;
  height: 1em;
  float: right;
  margin-right: 0 !important;
}


.anchor-right {
  @media screen and (max-width: 500px) {
    width: 70px;
    left: calc(100% - 70px);
  }
  width: 200px;
  height: 50px;
  position: relative;
  left: calc(100% - 200px);
  top: 0;
}

.anchor-wrp {
  width: calc(100% - 200px);
  display: inline-block;
  height: 0;
  position: relative;
  left: 0;
  top: 0;
}

:host {
  ::ng-deep .ql-editor.ql-blank::before {
    color: var(--on-surface);
    filter: opacity(0.6);
  }

  ::ng-deep .images .ql-video {
    width: 100%;
    aspect-ratio: 16 / 9;
  }

  ::ng-deep .ql-snow {
    :focus {
      outline-offset: 0;
    }

    a {
      color: unset;
    }

    .ql-editor {
      min-height: 8.8em;
    }

    &.ql-disabled {
      .ql-editor {
        min-height: unset;
        padding: unset;
      }
    }

    .ql-stroke {
      stroke: var(--on-surface);
    }

    .ql-picker {
      color: var(--on-surface);
      font-size: inherit !important;
      height: 1.5em !important;
      width: 1.75em !important;
    }

    .ql-tooltip {
      &::before {
        content: var(--quill-tooltip-label) !important;
      }

      color: var(--on-surface);
      background-color: var(--surface);

      .ql-action::after {
        padding: 7px !important;
        background: var(--primary);
        border-radius: 4px;
        color: var(--on-primary);
        content: var(--quill-tooltip-action) !important;
      }

      &.ql-editing .ql-action::after {
        --quill-tooltip-action: var(--quill-tooltip-action-save);
      }

      .ql-remove::before {
        content: var(--quill-tooltip-remove) !important;
        padding: 7px !important;
        background: var(--cancel);
        border-radius: 4px;
        color: var(--on-cancel);
      }

      &.ql-editing input[type=text] {
        border-color: var(--on-surface);
        color: var(--on-surface);
        background-color: var(--dialog);
      }
    }

    .ql-fill, .ql-stroke.ql-fill {
      fill: var(--on-surface);
    }

    .ql-picker.ql-expanded .ql-picker-label {
      color: var(--primary);

      .ql-stroke {
        stroke: var(--primary);
      }
    }

    &.ql-container {
      border-color: var(--on-surface);
      height: 80%;
      font-size: inherit !important;
    }

    &.ql-toolbar, .ql-toolbar {
      border-color: var(--on-surface);
      border-top: unset;
      border-right: unset;
      border-left: unset;

      .ql-formats {
        margin-right: 0;
        width: 100%;

        > * {
          @media only screen and (max-device-width: 480px) and (orientation: portrait),
          only screen and (max-device-height: 480px) and (orientation: landscape) {
            margin: 7px;
          }
        }
      }

      .ql-picker.ql-expanded {
        .ql-picker-label {
          border-color: var(--on-surface);
        }

        .ql-picker-options {
          background-color: var(--surface);
        }
      }

      button {
        font-size: inherit !important;
        height: 1.5em !important;
        width: 1.75em !important;
      }

      button:hover, button:focus, button.ql-active,
      .ql-picker-label:hover, .ql-picker-label.ql-active,
      .ql-picker-item:hover, .ql-picker-item.ql-selected {
        color: var(--primary);

        .ql-stroke {
          stroke: var(--primary);
        }

        .ql-fill, .ql-stroke.ql-fill {
          fill: var(--primary);
        }
      }
    }
  }

  ::ng-deep .mat-form-field-wrapper {
    position: absolute;
    top: -1.35em;
    width: fit-content;
    right: 0;

    @media only screen and (max-device-width: 480px) and (orientation: portrait),
    only screen and (max-device-height: 480px) and (orientation: landscape) {
      top: -1em;
    }
  }

  ::ng-deep .mat-form-field-infix {
    width: max-content;
  }
}
